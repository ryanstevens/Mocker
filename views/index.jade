
.header 
    div.links
        ul.app
            li.hit View it
                span.bang
            li.save Save            
        ul.system
            li.vote 
                iframe(src="http://nodeknockout.com/iframe/last-minute-submit", frameborder="0", scrolling="no", allowtransparency="true", width="115", height="25")
            li.about About
    h1 Mocker 
    h2 a web server in the client
    div.status saving
.content
    div.code-block
        div#files
            ul
                li.newFile new file +              
        div.code-container
            textarea
                /***
                *This default function is where 
                *all requests come to.  It is 
                *up to the programmer to 
                *route request, write to the response 
                *stream and end the response. 
                *
                *@param request contains headers and URL
                *@param response emits write, end
                */ 

                var routes = require('routes.js').routes;

                exports.handleResponse = function(request, response) {

                    routes.get('/home/', function(){
                        response.write('hello world');
                    });

                    routes.get('/ryan', function(){
                        response.write('my name is ryan');
                    });

                    routes.serve(request, response, function() {
                        response.end();
                    });

                }
        div.hiddenBlocks(style="display:none")
            textarea.routes(style="display:none")
            
                exports.routes = {
                    routes : {},
                    get : function(route, callback) {
                        this.routes[route] = callback;
                    },
                    serve: function(request, response, callback) {
                        _.each(this.routes, function(value, route) {
                            if (request.path.endsWith(route)) 
                                this.routes[route]();
                        }.bind(this));
                        if (callback) callback();
                    }
                };
                  
script(type='text/javascript')
    init();


script(type='text/javascript')
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-25610991-1']);
    _gaq.push(['_trackPageview']);
    (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();



